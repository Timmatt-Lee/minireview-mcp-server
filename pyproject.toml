[tool.black]
line-length = 88

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "W",  # pycodestyle warnings
    "I",  # isort
    "UP", # pyupgrade
]

# Allow unused variables that start with an underscore.
# ruff: noqa: PLC0602
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file doesn't have a `from __future__ import annotations` import.
keep-runtime-typing = true

[tool.pytest.ini_options]
asyncio_mode = 'auto'

[tool.coverage.run]
source = ["minireview_client", "server"]
omit = ["*/__pycache__/*", "tests/*", ".venv/*"]

[tool.coverage.report]
fail_under = 95
show_missing = true

[tool.setuptools]
packages = ["minireview_agent", "minireview_client"]

[project]
name = "minireview-mcp-server"
version = "0.1.0"
requires-python = ">=3.10, <4.0"
dependencies = [
    "requests==2.32.5",
    "uv==0.9.2",
    "fastmcp==2.12.4",
    "google-adk",
    "python-dotenv",
]

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "coverage",
    "pre-commit",
    "pytest-asyncio"
]
